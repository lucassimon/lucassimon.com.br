<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lucas Simon</title>
    <link>https://lucassimon.com.br/post/</link>
    <description>Recent content in Posts on Lucas Simon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Thu, 11 Oct 2018 13:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://lucassimon.com.br/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Série API em Flask - Parte 8 - Listando usuários</title>
      <link>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-8---listando-usuarios/</link>
      <pubDate>Thu, 11 Oct 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-8---listando-usuarios/</guid>
      <description>&lt;p&gt;A partir deste até o Capítulo 11: Deletando um usuário as rotas serão administrativas. Ou seja somente quem for da &lt;code&gt;role.admin = true&lt;/code&gt; poderá acessar essas rotas. A validação e autenticação será feita posteriormente, por agora, vamos apenas construir os recursos necessários.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 7 - Criando usuários</title>
      <link>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-7---criando-usuarios/</link>
      <pubDate>Wed, 10 Oct 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-7---criando-usuarios/</guid>
      <description>&lt;p&gt;Neste artigo vamos abordar como criar um endpoint para registrar o usuário em nossa base de dados de acordo com o modelo do artigo anterior. Também vamos utilizar o pacote &lt;code&gt;marshmallow&lt;/code&gt; para validar nosso schema e padronizar algumas mensagens de erro.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 6 - Criando e testando nosso modelo de usuários</title>
      <link>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-6---criando-e-testando-nosso-modelo-de-usuarios/</link>
      <pubDate>Tue, 09 Oct 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/10/serie-api-em-flask---parte-6---criando-e-testando-nosso-modelo-de-usuarios/</guid>
      <description>&lt;p&gt;Oi pessoal, vamos criar nosso modelo de usuários e realizar alguns testes em cima dele. Graças ao pacote &lt;code&gt;mongoengine&lt;/code&gt; fica bem fácil de criar nossas classes referente ao modelo de dados e é bem parecido com o Django, porém sem as migrations.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 5 - MongoDB</title>
      <link>https://lucassimon.com.br/2018/07/serie-api-em-flask---parte-5---mongodb/</link>
      <pubDate>Sun, 08 Jul 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/07/serie-api-em-flask---parte-5---mongodb/</guid>
      <description>&lt;p&gt;Nesta seção vamos instalar os pacotes necessários para conectar com o MongoDB, através de um container docker e configurá-lo em nossa aplicação Flask. Não tem segredo e bem simples.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 4 - Configurando o Makefile</title>
      <link>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-4---configurando-o-makefile/</link>
      <pubDate>Wed, 27 Jun 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-4---configurando-o-makefile/</guid>
      <description>&lt;p&gt;Para melhorar nosso desenvolvimento, coloco no arquivo Makefile todos os comandos que utilizo durante o processo de desenvolvimento de software. Leia o artigo e veja algumas dicas e como o &lt;code&gt;make&lt;/code&gt; pode facilitar nossa vida.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 3 - Configurando o pytest e nosso primeiro teste</title>
      <link>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-3---configurando-o-pytest-e-nosso-primeiro-teste/</link>
      <pubDate>Mon, 18 Jun 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-3---configurando-o-pytest-e-nosso-primeiro-teste/</guid>
      <description>&lt;p&gt;Um ponto importante para todo o processo de desenvolvimento de software é a implementação de testes. Claro que nem sempre conseguimos cobrir toda a aplicação com testes unitários porém a idéia aqui é minimizar os erros que podem ocorrer em produção.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>O Python virtualenv</title>
      <link>https://lucassimon.com.br/2018/06/o-python-virtualenv/</link>
      <pubDate>Sun, 17 Jun 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/o-python-virtualenv/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/r9Rcact11sE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;Para iniciarmos o ambiente, precisamos instalar alguns pacotes do &lt;code&gt;Python&lt;/code&gt;. Nos exemplos abaixo utilizarei o &lt;code&gt;Debian&lt;/code&gt; como sistema operacional, e o &lt;code&gt;apt&lt;/code&gt; como gerenciador de pacotes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 2 - Organizando as dependências e requerimentos</title>
      <link>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-2---organizando-as-dependencias-e-requerimentos/</link>
      <pubDate>Thu, 14 Jun 2018 13:00:00 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-2---organizando-as-dependencias-e-requerimentos/</guid>
      <description>&lt;p&gt;Hoje, vamos organizar e estruturar toda a aplicação assim como instalar os pacotes de desenvolvimento para a nossa API.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Um caminho para aprender Elixir</title>
      <link>https://lucassimon.com.br/2018/06/um-caminho-para-aprender-elixir/</link>
      <pubDate>Wed, 13 Jun 2018 09:07:41 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/um-caminho-para-aprender-elixir/</guid>
      <description>Bem vindos, com o recente despertar e interesse por programação funcional estou montando aqui um compilado com fontes de estudos. Nas próximas seções deixo um cronograma de estudos que pode ser adaptado a sua maneira.
Um dos primeiros passos e importante é receber uma introdução sobre o que são linguagens funcionais e o Elixir de quem trabalha com a linguagem e tem experiência. Segue os links:
 Linguagens funcionais Hipsters.</description>
    </item>
    
    <item>
      <title>Série API em Flask - Parte 1 - Introdução, configuração e Hello World</title>
      <link>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-1---introducao-configuracao-e-hello-world/</link>
      <pubDate>Tue, 12 Jun 2018 20:07:41 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/serie-api-em-flask---parte-1---introducao-configuracao-e-hello-world/</guid>
      <description>&lt;p&gt;Bem vindo! Vamos começar uma jornada para aprender a criar uma aplicação REST com Python e Flask Framework. No final deste projeto você será capaz de rodar localmente uma API com autenticação JWT.sss&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introdução ao elixir</title>
      <link>https://lucassimon.com.br/2018/06/introducao-ao-elixir/</link>
      <pubDate>Tue, 12 Jun 2018 09:07:41 -0300</pubDate>
      
      <guid>https://lucassimon.com.br/2018/06/introducao-ao-elixir/</guid>
      <description>Ola, vamos fazer uma breve introdução sobre o Elixir, uma linguagem de programação funcional.
Elixir O Elixir é uma linguagem de programação funcional que foi desenvolvida pelo brasileiro José Valim. Essa linguagem tem como objetivo resolver problemas de escalabilidade, ser tolerante a falhas e alta concorrência.
O Elixir utiliza a máquina virtual do Erlang, conhecida por executar sistemas de baixa latência e com execução de processos concorrentes executando próximo de 99%.</description>
    </item>
    
  </channel>
</rss>